{"ast":null,"code":"var _jsxFileName = \"/Users/panumasarch/Desktop/icstest/src/components/PlaceList.js\";\nimport React from \"react\";\nimport Data from \"../example_data.json\";\nimport { TestRoute } from \"../TestRoute\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport Avatar from \"@mui/material/Avatar\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\nimport ImageList from \"@mui/material/ImageList\";\nimport ImageListItem from \"@mui/material/ImageListItem\";\nimport { Button, CardActionArea, Grid, Icon } from \"@mui/material\";\nimport { borderColor, flexbox } from \"@mui/system\";\nimport { Box } from \"@mui/material\";\nimport { Outlet, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst test = value => {\n  /*#__PURE__*/_jsxDEV(Link, {\n    to: `/Test`,\n    children: \"Your Name\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n};\nexport const PlaceList = () => {\n  const Date = value => {\n    return value.filter(item => item.day === \"Monday\").map(item => `${item.time_open} AM - ${item.time_close} PM`);\n  };\n  const info = Data.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        bgcolor: \"background.paper\",\n        m: 1,\n        borderColor: \"primary.main\",\n        width: \"auto\",\n        maxWidth: \"auto\",\n        boxShadow: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        component: Link,\n        to: `/placedetail/${item.id}`,\n        state: item,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: item.profile_image_url,\n            variant: \"rounded\",\n            sx: {\n              width: 60,\n              height: 60\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this),\n          action: /*#__PURE__*/_jsxDEV(Typography, {\n            display: \"flex\",\n            sx: {\n              pr: 2,\n              pt: 5\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiberManualRecordIcon, {\n              color: \"primary\",\n              sx: {\n                width: \"15px\",\n                pr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), item.rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this),\n          title: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"p\",\n            sx: {\n              fontWeight: \"bold\"\n            },\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this),\n          subheader: `${Date(item.operation_time)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            justifyContent: \"center\",\n            p: 1,\n            m: 1,\n            mb: \"5%\",\n            width: \"90%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ImageList, {\n            gap: 0,\n            sx: {\n              maxWidth: \"auto\",\n              height: \"auto\",\n              borderRadius: \"10px\"\n            },\n            cols: 3,\n            children: item.images.map((imgs, index) => /*#__PURE__*/_jsxDEV(ImageListItem, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `${imgs}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_c = PlaceList;\nvar _c;\n$RefreshReg$(_c, \"PlaceList\");","map":{"version":3,"names":["React","Data","TestRoute","Card","CardHeader","CardContent","CardMedia","Typography","Avatar","FiberManualRecordIcon","ImageList","ImageListItem","Button","CardActionArea","Grid","Icon","borderColor","flexbox","Box","Outlet","Link","test","value","PlaceList","Date","filter","item","day","map","time_open","time_close","info","bgcolor","m","width","maxWidth","boxShadow","id","profile_image_url","height","pr","pt","rating","fontWeight","name","operation_time","justifyContent","p","mb","borderRadius","images","imgs","index"],"sources":["/Users/panumasarch/Desktop/icstest/src/components/PlaceList.js"],"sourcesContent":["import React from \"react\";\nimport Data from \"../example_data.json\";\nimport {TestRoute} from \"../TestRoute\";\n\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport Avatar from \"@mui/material/Avatar\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\nimport ImageList from \"@mui/material/ImageList\";\nimport ImageListItem from \"@mui/material/ImageListItem\";\nimport {Button, CardActionArea, Grid, Icon} from \"@mui/material\";\nimport {borderColor, flexbox} from \"@mui/system\";\nimport {Box} from \"@mui/material\";\nimport {Outlet, Link} from \"react-router-dom\";\n\nconst test = (value) => {\n  <Link to={`/Test`}>Your Name</Link>;\n};\n\nexport const PlaceList = () => {\n  const Date = (value) => {\n    return value\n      .filter((item) => item.day === \"Monday\")\n      .map((item) => `${item.time_open} AM - ${item.time_close} PM`);\n  };\n\n  const info = Data.map((item) => (\n    <Grid key={item.id} item xs={12} sm={6} md={4}>\n      <Card\n        sx={{\n          bgcolor: \"background.paper\",\n          m: 1,\n          borderColor: \"primary.main\",\n          width: \"auto\",\n          maxWidth: \"auto\",\n          boxShadow: 3,\n        }}>\n        <CardActionArea\n          component={Link}\n          to={`/placedetail/${item.id}`}\n          state={item}>\n          <CardHeader\n            avatar={\n              <Avatar\n                src={item.profile_image_url}\n                variant=\"rounded\"\n                sx={{width: 60, height: 60}}></Avatar>\n            }\n            action={\n              <Typography display=\"flex\" sx={{pr: 2, pt: 5}}>\n                <FiberManualRecordIcon\n                  color=\"primary\"\n                  sx={{width: \"15px\", pr: 1}}\n                />\n                {item.rating}\n              </Typography>\n            }\n            title={\n              <Typography variant=\"p\" sx={{fontWeight: \"bold\"}}>\n                {item.name}\n              </Typography>\n            }\n            subheader={`${Date(item.operation_time)}`}\n          />\n          <Box\n            sx={{\n              justifyContent: \"center\",\n              p: 1,\n              m: 1,\n              mb: \"5%\",\n              width: \"90%\",\n            }}>\n            <ImageList\n              gap={0}\n              sx={{\n                maxWidth: \"auto\",\n                height: \"auto\",\n                borderRadius: \"10px\",\n              }}\n              cols={3}>\n              {item.images.map((imgs, index) => (\n                <ImageListItem key={index}>\n                  <img src={`${imgs}`} />\n                </ImageListItem>\n              ))}\n            </ImageList>\n          </Box>\n        </CardActionArea>\n      </Card>\n    </Grid>\n  ));\n\n  return (\n    <Box>\n      <Grid container spacing={2}>\n        {info}\n      </Grid>\n    </Box>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}